{"version":3,"sources":["processors.js"],"names":["define","$","jsbin","extendFn","fn","obj","extend","passthrough","ready","defaultProcessor","source","resolve","reject","Promise","then","processorBy","extension","getScript","url","callback","ajax","cache","version","dataType","success","ProjectWriter","ErrorReporter","createProcessor","opts","init","handler","processorData","args","slice","call","arguments","target","shift","reduce","acc","curr","pick","extensions","length","id","forEach","ext","failed","window","console","warn","renderLivePreview","result","state","trim","processors","html","css","javascript","coffeescript","static","CoffeeScript","compile","bare","e","line","parseInt","location","first_line","ch","first_column","msg","message","jsx","code","editors","getCode","test","val","find","trigger","JSXTransformer","transform","livescript","LiveScript","lineMatch","match","typescript","ts","transpileModule","compilerOptions","inlineSourceMap","inlineSources","ScriptTarget","ES5","fileName","reportDiagnostics","diagnostics","filter","error","map","diagnostic","position","file","getLineAndCharacterOfPosition","start","character","flattenDiagnosticMessageText","messageText","substr","join","outputText","markdown","marked","processing","Processing","sourceCode","jade","pretty","log","less","render","column","errors","scss","throttle","debounceAsync","done","type","data","language","revision","cm","panels","editor","updateLinting","hintingDone","err","formatErrors","jqxhr","Error","responseText","complete","sass","babel","stage","loc","split","replace","RegExp","myth","stylus","clojurescript","worker","resolveWorker","addEventListener","event","JSON","parse","stringify","document","createElement","sandbox","name","onload","contentWindow","jsbin_cljs","cljs","goog","initilizer","textContent","core","eval","user","parent","postMessage","toString","body","appendChild","traceur","outputgeneration","SourceMapConsumer","SourceMapGenerator","util","reporter","reportMessageInternal","kind","format","href","project","semantics","symbols","Project","sourceFile","syntax","SourceFile","addFile","res","codegeneration","Compiler","write","i","push","from","to","severity","findByExtension","by"],"mappings":"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","file":"../processors.js","sourcesContent":["define([\r\n  \"skylark-jquery\",\r\n  \"./jsbin\"\r\n],function($,jsbin){\r\n\r\n  /*globals jsbin, _$, renderLivePreview, editors, throttle, debounceAsync, hintingDone, CodeMirror, Panel, editorModes */\r\n  'use strict';\r\n  /*\r\n   * Debugging note: to emulate a slow connection, or a processor taking too\r\n   * long to load, find the processor in question, and change the `init` method\r\n   * to setTimeout(getScript, n seconds) - this will give you an idea of how\r\n   * jsbin behaves when the processor isn't ready and the user makes calls to it\r\n   */\r\n\r\n\r\n  /**\r\n   * Add properties to a function using underscore\r\n   */\r\n  var extendFn = function (fn, obj) {\r\n    return $.extend(fn, obj);\r\n  };\r\n\r\n  var passthrough = function (ready) { return ready(); };\r\n  var defaultProcessor = function (source, resolve, reject) {\r\n    return new Promise(function (resolve) {\r\n      resolve(source);\r\n    }).then(resolve, reject);\r\n  };\r\n\r\n  /**\r\n   * Cache extension ids by their file extensions\r\n   */\r\n  var processorBy = {\r\n    extension: {},\r\n  };\r\n\r\n  /**\r\n   * A version of $.getScript, but using our jsbin version\r\n   * as the cachebuster\r\n   */\r\n  var getScript = function (url, callback) {\r\n    $.ajax({\r\n      cache: true,\r\n      url: url + '?' + jsbin.version,\r\n      dataType: 'script',\r\n      success: callback\r\n    });\r\n  };\r\n\r\n  function pick() {\r\n    var args = [].slice.call(arguments, 0);\r\n    var target = args.shift();\r\n    return args.reduce(function (acc, curr) {\r\n      acc[curr] = target[curr] || null;\r\n      return acc;\r\n    }, {});\r\n  }\r\n\r\n  /**\r\n   * Create a processor – accepts an object containing:\r\n   *\r\n   *    id          Processor name. Required.\r\n   *    target      The target panel. Optional - defaults to the id.\r\n   *    extensions  Possible file extensions for this processor (for gist i/o).\r\n   *                Optional. Defaults to the id.\r\n   *    url         URL of the loader script file. Optional.\r\n   *    init        Setup the processor here. Optional – defaults to the\r\n   *                passthrough (above).\r\n   *    handler     Where the magic happens. Do all processing in here.\r\n   *                Optional - defaults to the defaultProcessor (above).\r\n   */\r\n  var createProcessor = function (opts) {\r\n    var url = opts.url,\r\n        init = opts.init || passthrough,\r\n        handler = opts.handler || defaultProcessor,\r\n        processorData = pick(opts, 'id', 'target', 'extensions');\r\n\r\n    opts.extensions = opts.extensions || [];\r\n    if (!opts.extensions.length) {\r\n      opts.extensions = [opts.id];\r\n    }\r\n\r\n    opts.extensions.forEach(function (ext) {\r\n      processorBy.extension[ext] = opts.id;\r\n    });\r\n\r\n    // This actually loads in the processor – script files & init code\r\n    var loadProcessor = function (ready) {\r\n\r\n      var failed = false;\r\n\r\n      // Overwritten when the script loads\r\n      var callback = function () {\r\n        if (window.console) {\r\n          window.console.warn('Processor is not ready yet - trying again');\r\n        }\r\n        failed = true;\r\n        return '';\r\n      };\r\n\r\n      // Script has loaded.\r\n      // Run any init code, and swap the callback. If we failed, try again.\r\n      var scriptCB = function () {\r\n        init(function () {\r\n          callback = handler;\r\n          if (failed) {\r\n            renderLivePreview();\r\n          }\r\n          ready();\r\n        });\r\n      };\r\n\r\n      if (url) {\r\n        // Load the processor's script\r\n        getScript(url, scriptCB);\r\n      } else {\r\n        // No url, go straight on\r\n        init(function () {\r\n          callback = handler;\r\n          ready();\r\n        });\r\n      }\r\n\r\n      // Create a proxy function that holds the handler in scope so that, when\r\n      // the callbacks are swapped, rendering still works.\r\n      var cache = {\r\n        source: '',\r\n        result: ''\r\n      };\r\n\r\n      if (processorData.target) {\r\n        if (!jsbin.state.cache) {\r\n          jsbin.state.cache = {};\r\n        }\r\n        jsbin.state.cache[processorData.target] = cache;\r\n      }\r\n      var proxyCallback = function (source) {\r\n        return new Promise(function (resolve, reject) {\r\n          source = source.trim();\r\n          if (source === cache.source) {\r\n            resolve(cache.result);\r\n          } else {\r\n            callback(source, function (result) {\r\n              cache.source = source;\r\n              cache.result = result;\r\n              resolve(result);\r\n            }, reject);\r\n          }\r\n        });\r\n      };\r\n\r\n      // Return the method that will be used to render\r\n      return extendFn(proxyCallback, processorData);\r\n    };\r\n\r\n    // Processor fucntion also has the important data on it\r\n    return extendFn(loadProcessor, processorData);\r\n  };\r\n\r\n  /**\r\n   * JS Bin's processors\r\n   */\r\n  var processors = {\r\n\r\n    html: createProcessor({\r\n      id: 'html',\r\n      extensions: ['html']\r\n    }),\r\n\r\n    css: createProcessor({\r\n      id: 'css',\r\n      extensions: ['css']\r\n    }),\r\n\r\n    javascript: createProcessor({\r\n      id: 'javascript',\r\n      extensions: ['js']\r\n    }),\r\n\r\n    coffeescript: createProcessor({\r\n      id: 'coffeescript',\r\n      target: 'javascript',\r\n      extensions: ['coffee'],\r\n      url: jsbin.static + '/js/vendor/coffee-script.js',\r\n      init: function coffeescript(ready) {\r\n        getScript(jsbin.static + '/js/vendor/codemirror5/mode/coffeescript/coffeescript.js', ready);\r\n      },\r\n      handler: function (source, resolve, reject) {\r\n        var renderedCode = '';\r\n        try {\r\n          renderedCode = window.CoffeeScript.compile(source, {\r\n            bare: true\r\n          });\r\n          resolve(renderedCode);\r\n        } catch (e) {\r\n          var errors = {\r\n            line: parseInt(e.location.first_line, 10) || 0, // jshint ignore:line\r\n            ch: parseInt(e.location.first_column, 10) || 0, // jshint ignore:line\r\n            msg: e.message\r\n          };\r\n\r\n          reject([errors]);\r\n        }\r\n      }\r\n    }),\r\n\r\n    jsx: createProcessor({\r\n      id: 'jsx',\r\n      target: 'javascript',\r\n      extensions: ['jsx'],\r\n      url: jsbin.static + '/js/vendor/JSXTransformer.js',\r\n      init: function jsx(ready) {\r\n        // Don't add React if the code already contains a script whose name\r\n        // starts with 'react', to avoid duplicate copies.\r\n        var code = editors.html.getCode();\r\n        if (!(/<script[^>]*src=\\S*\\breact\\b/i).test(code)) {\r\n          $('#library').val( $('#library').find(':contains(\"React with Add-Ons\")').val() ).trigger('change');\r\n        }\r\n        ready();\r\n      },\r\n      handler: function (source, resolve, reject) {\r\n        var renderedCode = '';\r\n        try {\r\n          renderedCode = window.JSXTransformer.transform(source).code;\r\n          resolve(renderedCode);\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      }\r\n    }),\r\n\r\n    livescript: createProcessor({\r\n      id: 'livescript',\r\n      target: 'javascript',\r\n      extensions: ['ls'],\r\n      url: jsbin.static + '/js/vendor/livescript.js',\r\n      init: function livescript(ready) {\r\n        getScript(jsbin.static + '/js/vendor/codemirror5/mode/livescript/livescript.js', ready);\r\n      },\r\n      handler: function (source, resolve, reject) {\r\n        var renderedCode = '';\r\n        try {\r\n          renderedCode = window.LiveScript.compile(source, {\r\n            bare: true\r\n          });\r\n          resolve(renderedCode);\r\n        } catch (e) {\r\n          // index starts at 1\r\n          var lineMatch = e.message.match(/on line (\\d+)/) || [,];\r\n          var line = parseInt(lineMatch[1], 10) || 0;\r\n          if (line > 0) {\r\n            line = line - 1;\r\n          }\r\n          var msg = e.message.match(/(.+) on line (\\d+)$/) || [,];\r\n          var errors = {\r\n            line: line,\r\n            ch: null,\r\n            msg: msg[1]\r\n          };\r\n\r\n          reject([errors]);\r\n        }\r\n      },\r\n    }),\r\n\r\n    typescript: createProcessor({\r\n      id: 'typescript',\r\n      target: 'javascript',\r\n      extensions: ['ts'],\r\n      url: jsbin.static + '/js/vendor/typescript.min.js',\r\n      init: passthrough,\r\n      handler: function typescript(source, resolve, reject) {\r\n\r\n        var result = ts.transpileModule(source, {\r\n          compilerOptions: {\r\n            inlineSourceMap: true,\r\n            inlineSources: true,\r\n            target: ts.ScriptTarget.ES5\r\n          },\r\n          fileName: 'jsbin.ts',\r\n          reportDiagnostics: true\r\n        });\r\n\r\n        /**\r\n         *  TypeScript is complaining about the `isolateModules` setting, which\r\n         *  is meant to ignore import statements. We don't want to show that to\r\n         *  the user, so we just filter it out.\r\n         */\r\n        var diagnostics = result.diagnostics.filter(function(error){\r\n          return error.code !== 5047;\r\n        });\r\n\r\n        if (diagnostics.length) {\r\n          reject(diagnostics.map(function(diagnostic){\r\n            var position  = diagnostic.file.getLineAndCharacterOfPosition(diagnostic.start);\r\n            var line = position.line + 1;\r\n            var character = position.character + 1;\r\n            var message = ts.flattenDiagnosticMessageText(diagnostic.messageText, '\\n');\r\n            var code = source.substr(diagnostic.start, diagnostic.length);\r\n            return message + (code ? ' at ' + code : '') +\r\n              ' (' + diagnostic.file.fileName + ':'+line+':'+character+')';\r\n          }).join('\\n'));\r\n        } else {\r\n          resolve(result.outputText);\r\n        }\r\n      }\r\n    }),\r\n\r\n    markdown: createProcessor({\r\n      id: 'markdown',\r\n      target: 'html',\r\n      extensions: ['md', 'markdown', 'mdown'],\r\n      url: jsbin.static + '/js/vendor/marked.min.js',\r\n      init: function markdown(ready) {\r\n        getScript(jsbin.static + '/js/vendor/codemirror5/mode/markdown/markdown.js', ready);\r\n      },\r\n      handler: function (source, resolve, reject) {\r\n        try {\r\n          resolve(window.marked(source));\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      }\r\n    }),\r\n\r\n    processing: createProcessor({\r\n      id: 'processing',\r\n      target: 'javascript',\r\n      extensions: ['pde'],\r\n      url: jsbin.static + '/js/vendor/processing.min.js',\r\n      init: function (ready) {\r\n        $('#library').val( $('#library').find(':contains(\"Processing\")').val() ).trigger('change');\r\n        getScript(jsbin.static + '/js/vendor/codemirror5/mode/clike/clike.js', ready);\r\n      },\r\n      handler: function processing(source, resolve, reject) {\r\n        try {\r\n          var sketch = window.Processing.compile(source).sourceCode;\r\n          resolve([\r\n            '(function(){',\r\n            '  var canvas = document.querySelector(\"canvas\");',\r\n            '  if (!canvas) {',\r\n            '    canvas = document.createElement(\"canvas\");',\r\n            '    (document.body || document.documentElement).appendChild(canvas);',\r\n            '  }',\r\n            '  canvas.width = window.innerWidth;',\r\n            '  canvas.height = window.innerHeight;',\r\n            '  var sketchProc = ' + sketch + ';',\r\n            '  var p = new Processing(canvas, sketchProc);',\r\n            '})();'\r\n          ].join('\\n'));\r\n        } catch (e) {\r\n          reject(e);\r\n        }\r\n      }\r\n    }),\r\n\r\n    jade: createProcessor({\r\n      id: 'jade',\r\n      target: 'html',\r\n      extensions: ['jade'],\r\n      url: jsbin.static + '/js/vendor/jade.js?1.4.2',\r\n      init: function jade(ready) {\r\n        getScript(jsbin.static + '/js/vendor/codemirror5/mode/jade/jade.js', ready);\r\n      },\r\n      handler: function jade(source, resolve, reject) {\r\n        try {\r\n          resolve(window.jade.compile(source, { pretty: true })());\r\n        } catch (e) {\r\n          console.log('Errors', e);\r\n          // index starts at 1\r\n          var lineMatch = e.message.match(/Jade:(\\d+)/) || [,];\r\n          var line = parseInt(lineMatch[1], 10) || 0;\r\n          if (line > 0) {\r\n            line = line - 1;\r\n          }\r\n          var msg = e.message.match(/\\n\\n(.+)$/) || [,];\r\n          var errors = {\r\n            line: line,\r\n            ch: null,\r\n            msg: msg[1]\r\n          };\r\n\r\n          reject([errors]);\r\n        }\r\n      }\r\n    }),\r\n\r\n    less: createProcessor({\r\n      id: 'less',\r\n      target: 'css',\r\n      extensions: ['less'],\r\n      url: jsbin.static + '/js/vendor/less.min.js',\r\n      init: passthrough,\r\n      handler: function less(source, resolve, reject) {\r\n        window.less.render(source, function (error, result) {\r\n          if (error) {\r\n            // index starts at 1\r\n            var line = parseInt(error.line, 10) || 0;\r\n            var ch = parseInt(error.column, 10) || 0;\r\n            if (line > 0) {\r\n              line = line - 1;\r\n            }\r\n            if (ch > 0) {\r\n              ch = ch - 1;\r\n            }\r\n            var errors = {\r\n              line: line,\r\n              ch: ch,\r\n              msg: error.message\r\n            };\r\n\r\n            return reject([errors]);\r\n          }\r\n          resolve(result.css.trim());\r\n        });\r\n      }\r\n    }),\r\n\r\n    scss: createProcessor({\r\n      id: 'scss',\r\n      target: 'scss',\r\n      extensions: ['scss'],\r\n      // url: jsbin.static + '/js/vendor/sass/dist/sass.worker.js',\r\n      init: passthrough,\r\n        /* keeping old code for local version of scss if we ever want it again */\r\n        // getScript(jsbin.static + '/js/vendor/codemirror3/mode/sass/sass.js', function () {\r\n        // Sass.initialize(jsbin.static + '/js/vendor/sass/dist/worker.min.js');\r\n      handler: throttle(debounceAsync(function sass(source, resolve, reject, done) {\r\n        $.ajax({\r\n          type: 'post',\r\n          url: '/processor',\r\n          data: {\r\n            language: 'scss',\r\n            source: source,\r\n            url: jsbin.state.code,\r\n            revision: jsbin.state.revision\r\n          },\r\n          success: function (data) {\r\n            if (data.errors) {\r\n              // console.log(data.errors);\r\n              var cm = jsbin.panels.panels.css.editor;\r\n              if (typeof cm.updateLinting !== 'undefined') {\r\n                hintingDone(cm);\r\n                var err = formatErrors(data.errors);\r\n                cm.updateLinting(err);\r\n              }\r\n            } else if (data.result) {\r\n              resolve(data.result);\r\n            }\r\n          },\r\n          error: function (jqxhr) {\r\n            reject(new Error(jqxhr.responseText));\r\n          },\r\n          complete: done\r\n        });\r\n        // RS: keep this as it's the client side version of SCSS support...\r\n        // Sass.compile(source, function (result) {\r\n        //   if (typeof result !== 'string') {\r\n        //     reject(new Error('Error on line ' + result.line + ':\\n' + result.message));\r\n        //   } else {\r\n        //     resolve(result.trim());\r\n        //   }\r\n        // });\r\n      }), 500),\r\n    }),\r\n\r\n    sass: createProcessor({\r\n      id: 'sass',\r\n      target: 'sass',\r\n      extensions: ['sass'],\r\n      init: function (ready) {\r\n        getScript(jsbin.static + '/js/vendor/codemirror5/mode/sass/sass.js', ready);\r\n      },\r\n      handler: throttle(debounceAsync(function (source, resolve, reject, done) {\r\n        $.ajax({\r\n          type: 'post',\r\n          url: '/processor',\r\n          data: {\r\n            language: 'sass',\r\n            source: source,\r\n            url: jsbin.state.code,\r\n            revision: jsbin.state.revision\r\n          },\r\n          success: function (data) {\r\n            if (data.errors) {\r\n              // console.log(data.errors);\r\n              var cm = jsbin.panels.panels.css.editor;\r\n              if (typeof cm.updateLinting !== 'undefined') {\r\n                hintingDone(cm);\r\n                var err = formatErrors(data.errors);\r\n                cm.updateLinting(err);\r\n              }\r\n            } else if (data.result) {\r\n              resolve(data.result);\r\n            }\r\n          },\r\n          error: function (jqxhr) {\r\n            reject(new Error(jqxhr.responseText));\r\n          },\r\n          complete: done\r\n        });\r\n      }), 500),\r\n    }),\r\n\r\n    babel: createProcessor({\r\n      id: 'babel',\r\n      target: 'js',\r\n      extensions: ['es6'],\r\n      url: jsbin.static + '/js/vendor/babel.min.js',\r\n      init: function (ready) {\r\n        ready();\r\n      },\r\n      handler: function babelhandle(source, resolve, reject) {\r\n        try {\r\n          resolve(babel.transform(source, { stage: 0 }).code);\r\n        } catch (e) {\r\n          console.error(e.message);\r\n          reject([{\r\n            line: e.loc.line - 1,\r\n            ch: e.loc.column,\r\n            msg: e.message.split('\\n')[0].replace(new RegExp('\\\\\\(' + e.loc.line + ':' + e.loc.column + '\\\\\\)'), '(' + e.loc.column + ')')\r\n          }]);\r\n        }\r\n      }\r\n    }),\r\n\r\n    myth: createProcessor({\r\n      id: 'myth',\r\n      target: 'css',\r\n      extensions: ['myth'],\r\n      url: jsbin.static + '/js/vendor/myth.min.js',\r\n      init: function (ready) {\r\n        ready();\r\n      },\r\n      handler: function (source, resolve, reject) {\r\n        try {\r\n          resolve(window.myth(source));\r\n        } catch (e) {\r\n          // index starts at 1\r\n          var line = parseInt(e.line, 10) || 0;\r\n          var ch = parseInt(e.column, 10) || 0;\r\n          if (line > 0) {\r\n            line = line - 1;\r\n          }\r\n          if (ch > 0) {\r\n            ch = ch - 1;\r\n          }\r\n          var errors = {\r\n            line: line,\r\n            ch: ch,\r\n            msg: e.message\r\n          };\r\n\r\n          reject([errors]);\r\n        }\r\n      }\r\n    }),\r\n\r\n    stylus: createProcessor({\r\n      id: 'stylus',\r\n      target: 'css',\r\n      extensions: ['styl'],\r\n      url: jsbin.static + '/js/vendor/stylus.js',\r\n      init: passthrough,\r\n      handler: function stylus(source, resolve, reject) {\r\n        window.stylus(source).render(function (error, result) {\r\n          if (error) {\r\n            // index starts at 1\r\n            var lineMatch = error.message.match(/stylus:(\\d+)/) || [,];\r\n            var line = parseInt(lineMatch[1], 10) || 0;\r\n            var msg = error.message.match(/\\n\\n(.+)\\n$/) || [,];\r\n            if (line > 0) {\r\n              line = line - 1;\r\n            }\r\n            var errors = {\r\n              line: line,\r\n              ch: null,\r\n              msg: msg[1]\r\n            };\r\n\r\n            return reject([errors]);\r\n          }\r\n\r\n          resolve(result.trim());\r\n        });\r\n      }\r\n    }),\r\n\r\n    clojurescript: (function() {\r\n\r\n      var worker, resolveWorker;\r\n\r\n      function workerMsgHandler() {\r\n        window.addEventListener('message', function(event) {\r\n          var message;\r\n          try {\r\n            message = JSON.parse(event.data);\r\n          } catch (e) {\r\n            return;\r\n          }\r\n\r\n          if (message.type === 'eval') {\r\n            jsbin_cljs.core.eval(\r\n              '(ns cljs.user)' + message.source,\r\n              function(err, result) {\r\n                cljs.user = null;\r\n                if (err) {\r\n                  throw Error(err);\r\n                } else {\r\n                  parent.postMessage(JSON.stringify({\r\n                    type: 'eval',\r\n                    result: result\r\n                  }), '*');\r\n                }\r\n              });\r\n          }\r\n        }, false);\r\n      }\r\n\r\n      window.addEventListener('message', function(event) {\r\n        try {\r\n          var message = typeof event.data === 'string' ? JSON.parse(event.data) : event.data;\r\n\r\n          if (message.type === 'eval') {\r\n            resolveWorker('console.log('+JSON.stringify(message.result)+')');\r\n          }\r\n        } catch (e) {\r\n          // toss errors\r\n        }\r\n      }, false);\r\n\r\n      return createProcessor({\r\n        id: 'clojurescript',\r\n        target: 'js',\r\n        extensions: ['clj', 'cljs'],\r\n        url: jsbin.static + '/js/vendor/cljs.js',\r\n        init: function clojurescript(ready) {\r\n\r\n          /* Create sandbox */\r\n          worker = document.createElement('iframe');\r\n          worker.sandbox = 'allow-same-origin allow-scripts';\r\n          worker.name = '<cljs>';\r\n\r\n          worker.onload = function() {\r\n            /* Init CLJS context */\r\n            worker.contentWindow.jsbin_cljs = jsbin_cljs;\r\n            worker.contentWindow.cljs = cljs;\r\n            worker.contentWindow.goog = goog;\r\n\r\n            var initilizer = worker.contentWindow.document.createElement('script')\r\n            initilizer.textContent = '('+workerMsgHandler.toString().split('\\n').join('')+')()';\r\n            worker.contentWindow.document.body.appendChild(initilizer);\r\n\r\n            getScript(jsbin.static + '/js/vendor/codemirror5/mode/clojure/clojure.js', ready);\r\n          };\r\n\r\n          document.body.appendChild(worker);\r\n        },\r\n        handler: function (source, resolve, reject) {\r\n          try {\r\n            resolveWorker = resolve;\r\n            worker.contentWindow.postMessage(JSON.stringify({\r\n              type: 'eval',\r\n              source: source\r\n            }), '*');\r\n          } catch (e) {\r\n            console.error(e);\r\n          }\r\n        }\r\n      })\r\n    })(),\r\n\r\n    traceur: (function () {\r\n      var SourceMapConsumer,\r\n          SourceMapGenerator,\r\n          ProjectWriter,\r\n          ErrorReporter,\r\n          hasError;\r\n      return createProcessor({\r\n        id: 'traceur',\r\n        target: 'javascript',\r\n        extensions: ['traceur'],\r\n        url: jsbin.static + '/js/vendor/traceur.js',\r\n        init: function (ready) {\r\n          // Only create these once, when the processor is loaded\r\n          $('#library').val( $('#library').find(':contains(\"Traceur\")').val() ).trigger('change');\r\n          SourceMapConsumer = window.traceur.outputgeneration.SourceMapConsumer;\r\n          SourceMapGenerator = window.traceur.outputgeneration.SourceMapGenerator;\r\n          ProjectWriter = window.traceur.outputgeneration.ProjectWriter;\r\n          ErrorReporter = window.traceur.util.ErrorReporter;\r\n          ready();\r\n        },\r\n        handler: function (source, resolve, reject) {\r\n          hasError = false;\r\n\r\n          var reporter = new ErrorReporter();\r\n          reporter.reportMessageInternal = function(location, kind, format, args) {\r\n            reject(new Error(ErrorReporter.format(location, format, args)));\r\n          };\r\n\r\n          var url = location.href;\r\n          var project = new window.traceur.semantics.symbols.Project(url);\r\n          var name = 'jsbin';\r\n\r\n          var sourceFile = new window.traceur.syntax.SourceFile(name, source);\r\n          project.addFile(sourceFile);\r\n          var res = window.traceur.codegeneration.Compiler.compile(reporter, project, false);\r\n\r\n          var msg = '/*\\nIf you\\'ve just translated to JS, make sure traceur is in the HTML panel.\\nThis is terrible, sorry, but the only way we could get around race conditions.\\n\\nHugs & kisses,\\nDave xox\\n*/\\ntry{window.traceur = top.traceur;}catch(e){}\\n';\r\n          resolve(msg + ProjectWriter.write(res));\r\n        }\r\n      });\r\n    }())\r\n\r\n  };\r\n\r\n  var formatErrors = function(res) {\r\n    var errors = [];\r\n    var line = 0;\r\n    var ch = 0;\r\n    for (var i = 0; i < res.length; i++) {\r\n      line = res[i].line || 0;\r\n      ch = res[i].ch || 0;\r\n      errors.push({\r\n        from:  {line,ch}, ///CodeMirror.Pos(line, ch),\r\n        to:  {line,ch} , ///CodeMirror.Pos(line, ch),\r\n        message: res[i].msg,\r\n        severity : 'error'\r\n      });\r\n    }\r\n    return errors;\r\n  };\r\n\r\n\r\n  /**\r\n   * Find the processor that uses the given file extension\r\n   */\r\n  processors.findByExtension = function (ext) {\r\n    var id = processorBy.extension[ext];\r\n    if (!id) {\r\n      return defaultProcessor;\r\n    }\r\n    return processors[id];\r\n  };\r\n\r\n  processors.by = processorBy;\r\n\r\n  return jsbin.processors = processors;\r\n\r\n});\r\n"]}